From ad0dfa2ac3113739b832b57f25ed04a7a8a36bb6 Mon Sep 17 00:00:00 2001
From: Joffrey Bienvenu <joffrey.bienvenu@infrabel.be>
Date: Sun, 12 May 2024 17:08:24 +0200
Subject: [PATCH] replace api call by local data

---
 .../js/airflow/api/index.ts                   | 202 +++++++++---------
 1 file changed, 106 insertions(+), 96 deletions(-)

diff --git a/airflow_markdown_extension/js/airflow/api/index.ts b/airflow_markdown_extension/js/airflow/api/index.ts
index c9bc4ed..04d2ba5 100644
--- a/airflow_markdown_extension/js/airflow/api/index.ts
+++ b/airflow_markdown_extension/js/airflow/api/index.ts
@@ -1,107 +1,117 @@
-/*!
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *   http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing,
- * software distributed under the License is distributed on an
- * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- * KIND, either express or implied.  See the License for the
- * specific language governing permissions and limitations
- * under the License.
- */
-
-import axios, { AxiosResponse } from "axios";
 import camelcaseKeys from "camelcase-keys";
 
-import useClearRun from "./useClearRun";
-import useQueueRun from "./useQueueRun";
-import useMarkFailedRun from "./useMarkFailedRun";
-import useMarkSuccessRun from "./useMarkSuccessRun";
-import useClearTask from "./useClearTask";
-import useMarkFailedTask from "./useMarkFailedTask";
-import useMarkSuccessTask from "./useMarkSuccessTask";
-import useExtraLinks from "./useExtraLinks";
-import useMarkTaskDryRun from "./useMarkTaskDryRun";
-import useGraphData from "./useGraphData";
-import useGridData from "./useGridData";
-import useMappedInstances from "./useMappedInstances";
-import useDatasets from "./useDatasets";
-import useDatasetsSummary from "./useDatasetsSummary";
-import useDataset from "./useDataset";
-import useDatasetDependencies from "./useDatasetDependencies";
-import useDatasetEvents from "./useDatasetEvents";
-import useSetDagRunNote from "./useSetDagRunNote";
-import useSetTaskInstanceNote from "./useSetTaskInstanceNote";
-import useUpstreamDatasetEvents from "./useUpstreamDatasetEvents";
-import useTaskInstance from "./useTaskInstance";
-import useDag from "./useDag";
-import useDagCode from "./useDagCode";
-import useDagDetails from "./useDagDetails";
-import useHealth from "./useHealth";
-import usePools from "./usePools";
-import useDags from "./useDags";
-import useDagRuns from "./useDagRuns";
-import useHistoricalMetricsData from "./useHistoricalMetricsData";
-import { useTaskXcomEntry, useTaskXcomCollection } from "./useTaskXcom";
-import useEventLogs from "./useEventLogs";
-import useCalendarData from "./useCalendarData";
-import useCreateDatasetEvent from "./useCreateDatasetEvent";
-import useRenderedK8s from "./useRenderedK8s";
+interface Props {
+  dagIds?: string[];
+  enabled?: boolean;
+}
 
-axios.interceptors.request.use((config) => {
-  config.paramsSerializer = {
-    indexes: null,
-  };
-  return config;
-});
+function useDatasets({ dagIds, enabled = true }: Props) {
+  return camelcaseKeys({
+    "data": {
+      "datasets": [],
+      "total_entries": 209
+    }},
+          { deep: true }
+      )
+}
 
-axios.interceptors.response.use((res: AxiosResponse) =>
-  res.data ? camelcaseKeys(res.data, { deep: true }) : res
-);
+function useGraphData() {
+  return camelcaseKeys({
+    "data": {
+      "arrange": "LR",
+      "edges": [
+          {
+            "source_id": "get_failed_jobs",
+            "target_id": "process_failed_airflow_jobs_response"
+          },
+        {
+          "source_id": "process_failed_airflow_jobs_response",
+          "target_id": "export_failed_incident_to_table"
+        }
+        ],
+      "nodes": {
+        "children": [
+            {
+              "id": "export_failed_incident_to_table",
+              "value": {
+                "label": "export_failed_incident_to_table",
+                    "labelStyle": "fill:#000;",
+                    "rx": 5,
+                    "ry": 5,
+                    "style": "fill:#cdaaed;"
+              }
+              },
+          {
+            "id": "get_failed_jobs",
+            "value": {
+              "label": "get_failed_jobs",
+              "labelStyle": "fill:#000;",
+              "rx": 5,
+              "ry": 5,
+              "style": "fill:#cdaaed;"
+            }
+            },
+          {
+            "id": "process_failed_airflow_jobs_response",
+            "value": {
+              "label": "process_failed_airflow_jobs_response",
+                  "labelStyle": "fill:#000;",
+                  "rx": 5,
+                  "ry": 5,
+                  "style": "fill:#ffefeb;"
+            }
+          }
+          ],
+            "id": null,
+        "value": {
+          "clusterLabelPos": "top",
+              "isMapped": false,
+              "label": null,
+              "labelStyle": "fill:#000;",
+              "rx": 5,
+              "ry": 5,
+              "style": "fill:CornflowerBlue",
+              "tooltip": ""
+        }
+        },
+    }},
+          { deep: true }
+      )
+}
 
-axios.defaults.headers.common.Accept = "application/json";
+function useGridData() {
+  return camelcaseKeys({
+    "data": {
+      "dag_runs": [],
+      "groups": {
+        "children": [
+          {
+            "extra_links": [],
+            "has_outlet_datasets": false,
+            "id": "check_confluent_kafka",
+            "instances": [],
+            "is_mapped": false,
+            "label": "check_confluent_kafka",
+            "operator": "PythonOperator",
+            "trigger_rule": "all_success"
+          }
+        ],
+        "id": null,
+        "instances": [],
+        "label": null
+      },
+      "ordering": [
+        "data_interval_end",
+        "execution_date"
+      ]
+    }
+},
+  { deep: true }
+  )
+}
 
 export {
-  useClearRun,
-  useClearTask,
-  useDag,
-  useDagCode,
-  useDagDetails,
-  useDagRuns,
-  useDags,
-  useDataset,
   useDatasets,
-  useDatasetDependencies,
-  useDatasetEvents,
-  useDatasetsSummary,
-  useExtraLinks,
   useGraphData,
   useGridData,
-  useHealth,
-  useMappedInstances,
-  useMarkFailedRun,
-  useMarkFailedTask,
-  useMarkSuccessRun,
-  useMarkSuccessTask,
-  useMarkTaskDryRun,
-  usePools,
-  useQueueRun,
-  useSetDagRunNote,
-  useSetTaskInstanceNote,
-  useTaskInstance,
-  useUpstreamDatasetEvents,
-  useHistoricalMetricsData,
-  useTaskXcomEntry,
-  useTaskXcomCollection,
-  useEventLogs,
-  useCalendarData,
-  useCreateDatasetEvent,
-  useRenderedK8s,
 };
-- 
2.34.1

